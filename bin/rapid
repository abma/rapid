#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Copyright (C) 2010 Tobi Vollebregt

import os, sys
from rapid.main import *


def usage():
	print """Usage: %(progname)s <verb> [<argument>]

Where verb is one of:
 * upgrade: Install the latest package for all pinned tags.
 * clean-upgrade: Equivalent to 'upgrade' followed by 'uninstall-unpinned'.
 * pin: Pins a tag and installs the latest package for that tag.
 * unpin: Unpins a tag. Does not uninstall any packages.
 * install: Install a package. Does not pin any tags.
 * uninstall: Uninstall a package. Unpin its tag if any.
 * list-tags: List all tags that contain <argument>.
 * list-pinned-tags: Idem, but only pinned tags.
 * list-packages: List all packages whose name contains <argument>.
 * list-installed-packages: Idem, but only installed packages.
 * uninstall-unpinned: Keep only the pinned tags and all dependencies.
 * collect-pool: Remove pool files not needed by any installed package.
 * make-sdd: Extract pool files into a .sdd archive.

Examples:
%(progname)s pin xta:latest   # installs latest XTA
%(progname)s pin s44:latest   # installs latest Spring: 1944
%(progname)s upgrade          # upgrade all pinned tags
""" % {'progname': sys.argv[0]}
	sys.exit(1)


where = [2]

def req_arg():
	if len(sys.argv) <= where[0]:
		print 'Not enough arguments to operation.'
		print
		usage()
	where[0] += 1
	return sys.argv[where[0] - 1]

def opt_arg():
	if len(sys.argv) > 2:
		return sys.argv[2]
	return ''


if __name__ == '__main__':
	if len(sys.argv) < 2:
		usage()

	verb = sys.argv[1]

	if verb == 'pin':
		pin(req_arg())
	elif verb == 'unpin':
		unpin(req_arg())
	elif verb == 'install':
		install(req_arg())
	elif verb == 'uninstall':
		uninstall(req_arg())
	elif verb == 'list-packages':
		list_packages(opt_arg(), True)
	elif verb == 'list-installed-packages':
		list_packages(opt_arg(), False)
	elif verb == 'list-tags':
		list_tags(opt_arg(), True)
	elif verb == 'list-pinned-tags':
		list_tags(opt_arg(), False)
	elif verb == 'update' or verb == 'upgrade':
		upgrade()
	elif verb == 'clean-update' or verb == 'clean-upgrade':
		clean_upgrade()
	elif verb == 'uninstall-unpinned':
		uninstall_unpinned()
	elif verb == 'collect-pool':
		collect_pool()
	elif verb == 'make-sdd':
		make_sdd(req_arg(), req_arg())
	else:
		print 'Unknown operation: ' + verb
		print
		usage()
